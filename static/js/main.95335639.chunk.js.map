{"version":3,"sources":["Components/form-styles.module.css","Components/contactsList-styles.module.css","Components/Form.js","Components/Filter.js","Components/ContactList.js","App.js","reportWebVitals.js","index.js","Components/filter-styles.module.css"],"names":["module","exports","Form","state","name","number","id","handleChange","event","currentTarget","value","setState","shortid","generate","reset","handleSubmit","preventDefault","props","onSubmit","this","className","s","form","label","input","type","pattern","title","required","onChange","btn","React","Component","Filter","div","ContactList","contacts","onDelete","list","map","contact","item","p","span","onClick","App","filter","formSubmitHandler","data","undefined","find","obj","alert","prevState","changeFilter","getFilteredContacts","normalizedFilter","toLocaleLowerCase","includes","deleteContact","el","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95335639.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"form-styles_label__N90rD\",\"input\":\"form-styles_input__1rBPo\",\"form\":\"form-styles_form__3_OQR\",\"btn\":\"form-styles_btn__2NWzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactsList-styles_list__1UNoD\",\"item\":\"contactsList-styles_item__1x42D\",\"span\":\"contactsList-styles_span__3LCxx\",\"btn\":\"contactsList-styles_btn__34jBT\",\"p\":\"contactsList-styles_p__iPmfW\"};","import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport s from './form-styles.module.css';\n\nclass Form extends React.Component {\n  static propTypes = {\n    onSubmit: PropTypes.func,\n  };\n\n  state = { name: '', number: '', id: '' };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value, id: shortid.generate() });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '', id: '' });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className={s.label}>Name</label>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label className={s.label}>Number</label>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\" className={s.btn}>\n          Add to contacts\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport s from './filter-styles.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={s.div}>\n      <label className={s.label}>Find contacts by name</label>\n      <input onChange={onChange} value={value} className={s.input}></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './contactsList-styles.module.css';\n\nexport default function ContactList({ contacts, onDelete }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => {\n        const { name, number, id } = contact;\n        return (\n          <li key={id} className={s.item}>\n            <p className={s.p}>\n              {name} <span className={s.span}>{number}</span>\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => onDelete(id)}\n              className={s.btn}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDelete: PropTypes.func,\n};\n","import './App.css';\nimport React from 'react';\nimport Form from './Components/Form';\nimport Filter from './Components/Filter';\nimport ContactList from './Components/ContactList';\nimport PropTypes from 'prop-types';\n\nclass App extends React.Component {\n  static propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    let similar = this.state.contacts.find(obj => obj.name === data.name);\n\n    similar !== undefined\n      ? alert(`${data.name} is already in contacts.`)\n      : this.setState(prevState => ({\n          contacts: [...prevState.contacts, data],\n        }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const normalizedFilter = this.state.filter.toLocaleLowerCase();\n\n    const filteredNames = this.state.contacts.filter(item =>\n      item.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n\n    return filteredNames;\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(el => el.id !== id),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const visibleContacts = this.getFilteredContacts();\n    return (\n      <div>\n        <Form onSubmit={this.formSubmitHandler} />\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        {this.state.filter !== '' ? (\n          <ContactList\n            contacts={visibleContacts}\n            onDelete={this.deleteContact}\n          />\n        ) : (\n          <ContactList\n            contacts={this.state.contacts}\n            onDelete={this.deleteContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"filter-styles_div__3fms0\",\"input\":\"filter-styles_input__1RcsV\",\"label\":\"filter-styles_label__38nTn\"};"],"sourceRoot":""}